{"version":3,"file":"static/js/499.87440d25.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBF,EAAAA,EAAAA,IAAA,oCAAuCC,IADzD,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,uFACkBP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBM,IAFvC,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,oBAAkCR,IADpD,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA+BD,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkBT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACWR,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kE,2IC5BMQ,EAAcC,EAAAA,EAAAA,GAAH,6DAGXC,EAAeD,EAAAA,EAAAA,GAAH,sBACZE,EAAeF,EAAAA,EAAAA,GAAH,sBACZG,EAAcH,EAAAA,EAAAA,EAAH,sB,SCGT,SAASI,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAaO,GAASM,KAAKF,EAC5B,GAAE,CAACJ,IAEGG,EAAQI,QACb,SAACb,EAAD,UACGS,EAAQK,KAAI,SAAAC,GAAM,OACjB,UAACb,EAAD,YACE,SAACC,EAAD,UAAeY,EAAOC,UACtB,SAACZ,EAAD,UAAcW,EAAOE,YAFJF,EAAOnB,GADT,OAQrB,SAACQ,EAAD,uCAEH,C","sources":["Api/Api.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b1182fc6a17a9d116199a570dc720d86';\n\n// самые популярные фильмы\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n// поиск фильмов\nexport async function fetchMoviesSearch(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n// информация о фильме\nexport async function fetchMoviesById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n// информация об актёрах\nexport async function fetchMoviesCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n// отзывы о фильмах\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n","import style from '@emotion/styled';\n\nexport const ReviewsList = style.ul`\nlist-style: none;\n    padding: 15px;`;\nexport const ReviewsInput = style.li``;\nexport const ReviewsTitle = style.h3``;\nexport const ReviewsText = style.p``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../Api/Api';\nimport {\n  ReviewsList,\n  ReviewsInput,\n  ReviewsTitle,\n  ReviewsText,\n} from './Reviews.styled.jsx';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return reviews.length ? (\n    <ReviewsList>\n      {reviews.map(review => (\n        <ReviewsInput key={review.id}>\n          <ReviewsTitle>{review.author}</ReviewsTitle>\n          <ReviewsText>{review.content}</ReviewsText>\n        </ReviewsInput>\n      ))}\n    </ReviewsList>\n  ) : (\n    <ReviewsText>There are no reviews yet.</ReviewsText>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesSearch","query","fetchMoviesById","id","fetchMoviesCast","cast","fetchReviews","ReviewsList","style","ReviewsInput","ReviewsTitle","ReviewsText","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","length","map","review","author","content"],"sourceRoot":""}
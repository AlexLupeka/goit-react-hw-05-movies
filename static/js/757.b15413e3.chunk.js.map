{"version":3,"file":"static/js/757.b15413e3.chunk.js","mappings":"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","sources":["Api/Api.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b1182fc6a17a9d116199a570dc720d86';\n\n// самые популярные фильмы\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n// поиск фильмов\nexport async function fetchMoviesSearch(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n}\n// информация о фильме\nexport async function fetchMoviesById(id) {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n// информация об актёрах\nexport async function fetchMoviesCast(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n}\n// отзывы о фильмах\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n}\n","import style from '@emotion/styled';\n\nexport const MovieDetailsButton = style.button`\n    margin-bottom: 16px;\n    height: 28px;\n    border: none;\n    border-radius: 5px;\n    color: azure;\n    background-color: #1a2d5e;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n&:hover {\n    opacity: 1;\n}\n`;\n\nexport const MovieDetailsCard = style.div`\n    display: flex;\n    margin-bottom: 15px;\n`;\n\nexport const MovieDetailsImg = style.img`\n    margin-right: 25px;\n`;\n\nexport const MovieDetailsText = style.p`\n margin-right: 10px;\n`;\n\nexport const MovieDetailsGenre = style.p`\n    margin-right: 10px;\n`;\n\nexport const MovieDetailsTitle = style.h3`\n    margin: 10px auto 6px 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { fetchMoviesById } from '../../Api/Api';\nimport { toast } from 'react-toastify';\nimport Loader from '../../components/Loader/Loader';\nimport {\n  MovieDetailsButton,\n  MovieDetailsCard,\n  MovieDetailsImg,\n  MovieDetailsTitle,\n  MovieDetailsText,\n  MovieDetailsGenre,\n} from './MovieDetailsPage.styled.jsx';\nimport style from '@emotion/styled';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetchMoviesById(movieId)\n      .then(movie => {\n        setMovie(movie);\n        setLoading(false);\n      })\n      .catch(error => {\n        toast(`${error}`);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  const goBack = () => {\n    navigate(\n      location.state\n        ? `${location.state.from.pathname}${location.state.from.search}`\n        : '/'\n    );\n  };\n\n  const StyledLink = style(NavLink)`\n    display: inline-block;\n  text-decoration: none;\n  padding: 12px;\n  font-weight: 700;\n  color: #1a2d5e;\n  font-size: 16px;\n\n    &.active {\n   width: 80px;\n  height: 20px;\n  text-align: center;\n  cursor: pointer;\n  display: inline-block;\n  margin: auto 0 auto 0;\n  background-color: #ff6b08;\n  border: none;\n  border-radius: 15px;\n  text-transform: uppercase;\n  color: white;\n  outline: none;\n  transition: all 250ms ease-in-ou;\n  &:hover {\n  background-color: #FF0000;\n}\n  `;\n\n  return (\n    <>\n      <MovieDetailsButton type=\"button\" onClick={goBack}>\n        Go back\n      </MovieDetailsButton>\n      <br />\n      {loading && <Loader />}\n      {movie && (\n        <>\n          <MovieDetailsCard>\n            <MovieDetailsImg\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div>\n              <MovieDetailsTitle>\n                {movie.title ? movie.title : movie.name}\n              </MovieDetailsTitle>\n              <MovieDetailsText>\n                User score: {movie.vote_average * 10}%\n              </MovieDetailsText>\n              <MovieDetailsTitle>Overview</MovieDetailsTitle>\n              <MovieDetailsText>{movie.overview}</MovieDetailsText>\n              <MovieDetailsTitle>Genres</MovieDetailsTitle>\n              {movie.genres &&\n                movie.genres.map(genre => (\n                  <MovieDetailsGenre key={genre.id}>\n                    {genre.name}\n                  </MovieDetailsGenre>\n                ))}\n            </div>\n          </MovieDetailsCard>\n          <hr />\n\n          <MovieDetailsTitle> Additional information</MovieDetailsTitle>\n          <StyledLink\n            to={`cast`}\n            state={location.state ? { from: location.state.from } : null}\n          >\n            Cast\n          </StyledLink>\n          <StyledLink\n            to={`reviews`}\n            state={location.state ? { from: location.state.from } : null}\n          >\n            Reviews\n          </StyledLink>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesSearch","query","fetchMoviesById","id","fetchMoviesCast","cast","fetchReviews","MovieDetailsButton","style","MovieDetailsCard","MovieDetailsImg","MovieDetailsText","MovieDetailsGenre","MovieDetailsTitle","MovieDetailsPage","movieId","useParams","navigate","useNavigate","location","useLocation","useState","movie","setMovie","loading","setLoading","useEffect","then","catch","error","toast","StyledLink","NavLink","type","onClick","state","from","pathname","search","Loader","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre","to","Suspense","fallback"],"sourceRoot":""}